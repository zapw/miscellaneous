#!/bin/bash
#
# sshfs         Start up sshfs with kiev
#
# chkconfig: 2345 55 25
# description: set up connection with kiev
#
# processname: sshfs
# pidfile: /var/run/sshfs.pid

### BEGIN INIT INFO
# Provides: sshd
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: set up connection with kiev
# Description:      set up connection with kiev
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

# pull in sysconfig settings
[ -f /etc/sysconfig/sshfs ] && . /etc/sysconfig/sshfs

RETVAL=0
prog="sshfs"
lockfile=/var/lock/subsys/$prog

# Some functions to make the below more readable
PID_FILE=/var/run/sshfs.pid

SSHFS=/usr/bin/sshfs
runlevel=$(set -- $(runlevel); eval "echo \$$#" )

start()
{
        [ -x "$SSHFS" ] || exit 5
        [[ -f $PID_FILE ]] && kill -0 $(<$PID_FILE) 2>/dev/null  && exit 1
        echo -n $"Starting $prog: "
        AUTOSSH_GATETIME=0 runuser -s /bin/bash git -c "ulimit -S -c 0 >/dev/null 2>&1 ; \"$SSHFS\" $OPTION \"$RMTUSER@$SERVER:$RMTPATH\" \"$MNTPOINT\"" >/dev/null </dev/null &
        sleep 3
        kill -0 $(jobs -p %%) && success || failure
        disown

        RETVAL=$?
        OPTION=$(sed "s/'//g" <<<"$OPTION")
        [ $RETVAL -eq 0 ] && touch $lockfile && echo $(pgrep -f "$SSHFS $OPTION $RMTUSER@$SERVER:$RMTPATH $MNTPOINT") > $PID_FILE
        echo
        return $RETVAL
}

stop()
{
        echo -n $"Stopping $prog: "
        killproc -p $PID_FILE $SSHFS
        RETVAL=$?
        # if we are in halt or reboot runlevel kill all running sessions
        # so the TCP connections are closed cleanly
        if [ "x$runlevel" = x0 -o "x$runlevel" = x6 ] ; then
            trap '' TERM
            killall $prog 2>/dev/null
            trap TERM
        fi
        [ $RETVAL -eq 0 ] && rm -f $lockfile
        echo
}

reload()
{
        stop
        start
}

restart() {
        stop
        start
}

force_reload() {
        restart
}

rh_status() {
        status -p $PID_FILE sshfs
}

rh_status_q() {
        rh_status >/dev/null 2>&1
}

case "$1" in
        start)
                #rh_status_q && exit 0
                start
                ;;
        stop)
                #if ! rh_status_q; then
                #       rm -f $lockfile
                #       exit 0
                #fi
                stop
                ;;
        restart)
                restart
                ;;
        reload)
                rh_status_q || exit 7
                reload
                ;;
        force-reload)
                force_reload
                ;;
        condrestart|try-restart)
                rh_status_q || exit 0
                if [ -f $lockfile ] ; then
                        do_restart_sanity_check
                        if [ $RETVAL -eq 0 ] ; then
                                stop
                                # avoid race
                                sleep 3
                                start
                        else
                                RETVAL=6
                        fi
                fi
                ;;
        status)
                rh_status
                RETVAL=$?
                if [ $RETVAL -eq 3 -a -f $lockfile ] ; then
                        RETVAL=2
                fi
                ;;
        *)
                echo $"Usage: $0 {start|stop|restart|reload|force-reload|condrestart|try-restart|status}"
                RETVAL=2
esac
exit $RETVAL
