################################################################################
#
# 
# Copyright(c) 1999 - 2010 Intel Corporation. All rights reserved.
# 
# Makefile for building i200e sv driver
#
################################################################################
#ARCH := $(shell uname -m | sed 's/i.86/i386/')

RDMA	?= 0
REDHAT_DISTRIB:=$(shell grep -lr "Santiago" /etc/*-release 2>/dev/null)

ccflags-y += -I$(src)/../sv_shared/
ccflags-y += -I$(src)/../api/inc/
ccflags-y += -I$(src)/../api/iwarp/inc/
ccflags-y += -I$(src)/../i200e/lan/
ccflags-y += -I$(src)/../i200e/iwarp/
ccflags-y += -I$(src)/../i200e/shared/
ccflags-y += -I$(src)/../iw_shared/

ccflags-y += -O2     # optimize for performance
ccflags-y += -DI200E
ccflags-y += -DEXP_TABLE_NO_GAP
ccflags-y += -DSV_DRIVER

# iwarp is current by default disabled
# comment mext line to enable iwarp
#ifeq ($(RDMA),0)
#	ccflags-y += -DDISABLE_IWARP
#else
#ccflags-y += -DSKIP_PFR
#endif
ccflags-y += -DIW_DO_NOT_LOAD_FW
#ccflags-y += -DSINGLE_PF
#
#
#=====================================================================
#if you set the MEMDEBUG flag here, you MUST set it in i200evf Kbuild as well - very important!!!
#ccflags-y += -DMEMDEBUG
#=====================================================================
#
#ccflags-y += -DIWARP_PAGED_SD

ccflags-y += -DAH_UDA
ccflags-y += -DUDA_ENABLED
ccflags-y += -DRDMA_VIRTCHNL
ccflags-y += -DI40IW_PUDA
ccflags-y += -DMKI_ROCE
ccflags-y += -DCHECK_PARAMS

#ccflags-y += -DSINGLE_THREADED_ACCESS
#ccflags-y += -DFIX_MAX_PAYLOAD
#ccflags-y += -DIWARP_LOW_MEMORY
#ccflags-y += -DFVL_MINIMAL_MSIX_VECTORS
#ccflags-y += -DDISABLE_FORCE_GEN3
#ccflags-y += -DFLASHLESS_MODE  
#ccflags-y += -DDISABLE_REG_READ_WRITE
#ccflags-y += -DFVL_RESUME_TSCD
#ccflags-y += -DFVL_FPGA_DELAY
#ccflags-y += -DFVL_SKIP_CHECK_ULD
#ccflags-y += -DREG_WRITE_PRINT
#ccflags-y += -DFVL_NO_NVM_AUTOLOAD
#ccflags-y += -DFVL_FW_BYPASS
#ccflags-y += -DCHECK_LINK_BY_REG
#ccflags-y += -DIGNORE_LSE_EVENTS
#ccflags-y += -DIWARP_LINUX

ccflags-y += -DSV_SUPPORT
ccflags-y += -DFPGA_SUPPORT
ccflags-y += -DICRDMA_FPGA_SUPPORT
ccflags-y += -DSYSLOG_PRINTS
#ccflags-y += -DI40IW_DEBUG_WQE
#ccflags-y += -DRS_BIT_NO_OVERWRITE
#ccflags-y += -DIW_PRINT_FW_DEBUG_PROBE
#ccflags-y += -Winline
#ccflags-y += -DCHECKER_DISABLED
#ccflags-y += -DI200E_IGNORE_RESET_COMPLETION_TIMEOUT
#ccflags-y += -DDISABLE_VECTOR_0_AFFINITY

#ccflags-y += -DRECOVER_MISSING_GRST
#ccflags-y += -DBH_IRQ
#ccflags-y += -DSKIP_PFR

# these flags are mutualy exclusive
#ccflags-y += -DVELOCE
#ccflags-y += -DI200E_STATIC_PSM_CONFIG

#ccflags-y += -DWRITE_VF_DOORBELL_FROM_PF

#ccflags-y += -DEMPR_AS_GLOBR

ccflags-y += -DDISABLE_LAN_TX_QUEUE_EAS_1_1
ccflags-y += -DI200E_GLOBAL_RESET_ON_LOAD
ccflags-y += -DI200E_NUM_VFS_WORKAROUND


ccflags-y += -Wno-format
ccflags-y += -Wno-unused-variable
ccflags-y +=	-Wunused-label

#ccflags-y += $(VAR)


######## debug flags ####################
#ccflags-y += -DTX_DBG
#ccflags-y += -DWRITE_REG_DUMP
#ccflags-y += -DPRINT_TX_BUFFER

######## workarounds flags ####################
#ccflags-y += -DTRIGGER_SW_INTR_WA
#ccflags-y += -DCALL_TX_HANDLER_ON_HANG
#ccflags-y += -DFW_TIMEOUT_RECOVERY

#ccflags-y += -DCPK_FPGA_F2  
  
ifneq ($(REDHAT_DISTRIB),)
	ccflags-y += -DNO_CUSTOM_KMEM_CACHE
endif


# If we compile for SVOS, change target module name (suffix it with "sv")
ifeq ($(SVOS),1)
	ccflags-y += -DSVOS
	TARGET_OBJ = i200esv.o
	OBJECTS = i200esv-y
else
	TARGET_OBJ = i200e.o
	OBJECTS = i200e-y
endif

obj-m += $(TARGET_OBJ)

ifeq ($(REDHAT_DISTRIB),)
$(OBJECTS):= shared/ice_common.o\
		shared/ice_controlq.o\
		shared/ice_sched.o\
		shared/ice_switch.o\
		shared/ice_nvm.o\
		shared/ice_flex_pipe.o\
		lan/i200e_main.o\
		lan/i200e_intr.o\
		lan/i200e_mem.o\
		lan/i200e_tx_ring.o\
		lan/i200e_rx_ring.o\
		lan/i200e_aq.o\
		lan/i200e_iov.o\
		lan/i200e_vmdq.o\
		lan/i200e_switch.o\
		lan/i200e_psm.o\
		lan/i200e_txcq.o\
		lan/i200e_dblq.o\
		shared/ice_osdep.o\
		iwarp/icrdma_push.o \
		iwarp/icrdma_ws.o\
		iwarp/icrdma_main.o\
		iwarp/icrdma_ctrl_cmds.o \
        iwarp/icrdma_pd.o \
        iwarp/icrdma_cq.o \
        iwarp/icrdma_qp.o \
        iwarp/icrdma_stag.o \
        iwarp/icrdma_cm.o \
        iwarp/icrdma_event_q.o \
        iw_shared/iw_resource_mgr.o\
        iw_shared/iw_stag.o \
        iw_shared/iw_aeq.o \
        iw_shared/iw_mmap.o \
        iw_shared/iw_shared_pbl.o\
        iwarp/icrdma_pbl.o \
        shared/hmc.o\
        shared/ctrl.o\
        shared/debug.o\
        shared/uk.o\
        shared/virtchnl.o\
        shared/vf.o\
        shared/icrdma_pble.o\
        shared/puda.o\
		shared/uda.o\
		shared/uda_uk.o\
        iw_shared/iw_resource_mgr.o\
        iw_shared/iw_stag.o \
        iw_shared/iw_aeq.o \
        iw_shared/iw_mmap.o \
        iw_shared/iw_shared_pbl.o\
		sv_shared/sv_main.o\
		sv_shared/sv_ctrl.o\
		sv_shared/sv_ctrl_cmds.o\
		sv_shared/sv_queue.o\
		sv_shared/sv_diag.o\
		sv_shared/sv_log.o\
		sv_shared/sv_error.o\
		sv_shared/sv_packetcollector.o\
		sv_shared/sv_intr.o\
		sv_shared/sv_iov.o\
		sv_shared/sv_exp_table.o\
		sv_shared/sv_events.o\
		sv_shared/sv_config.o\
		sv_shared/sv_rx_packet.o\
		sv_shared/sv_tx_ring.o\
		sv_shared/sv_rx_ring.o\
		sv_shared/sv_rx_ring_adv.o\
		sv_shared/sv_cc.o\
		sv_shared/sv_cc_desc_ops.o\
		sv_shared/sv_mem.o\
		
#shared/i40iw_uda.o\ removing UDA for now as it requires special look into new shared code.
#shared/i40iw_uda_uk.o
else
$(OBJECTS):= shared/ice_common.o\
		shared/ice_controlq.o\
		shared/ice_sched.o\
		shared/ice_switch.o\
		shared/ice_nvm.o\
		shared/ice_flex_pipe.o\
		lan/i200e_main.o\
		lan/i200e_intr.o\
		lan/i200e_mem.o\
		lan/i200e_psm.o\
		lan/i200e_txcq.o\
		lan/i200e_dblq.o\
		lan/i200e_tx_ring.o\
		lan/i200e_rx_ring.o\
		lan/i200e_aq.o\
		lan/i200e_switch.o\
		lan/i200e_iov.o\
		lan/i200e_vmdq.o\
		sv_shared/sv_main.o\
		sv_shared/sv_ctrl.o\
		sv_shared/sv_ctrl_cmds.o\
		sv_shared/sv_mem.o\
		sv_shared/sv_queue.o\
		sv_shared/sv_diag.o\
		sv_shared/sv_log.o\
		sv_shared/sv_error.o\
		sv_shared/sv_packetcollector.o\
		sv_shared/sv_intr.o\
		sv_shared/sv_iov.o\
		sv_shared/sv_exp_table.o\
		sv_shared/sv_events.o\
		sv_shared/sv_config.o\
		sv_shared/sv_rx_packet.o\
		sv_shared/sv_tx_ring.o\
		sv_shared/sv_rx_ring.o\
		sv_shared/sv_rx_ring_adv.o\
		sv_shared/sv_cc.o\
		sv_shared/sv_cc_desc_ops.o\

endif

# it seem that we remove some critical operation from uda. need to restore from shared code.
#		shared/i40iw_uda.o\
#               shared/i40iw_uda_uk.o\
#
.PHONY: print
print:
	@echo "$(ccflags-y)"
