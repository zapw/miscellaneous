#!/bin/bash

conntimeo="30"
user=""
vdom=""
interface=""
qagroup=""
declare -A rcenter=(["hostname"]="" ["ip"]="")

usage() {
cat <<'EOF'
Usage:
 fortigate [--rcenter hostname] [--vdom vdomname] [-s server[-port] ...]
 fortigate -h
Options:
  --rcenter repliweb center hostname
  --vdom name of fortigate virtual domain
  --interface name of associated-interface 
  --qagroup name of QA address group
  -s server-port address of fortigate router
  -h, --help        Print this usage
EOF
exit 1
}

OPTIND=1
while getopts "hs:-:" opt; do
    case "$opt" in
        s)
            if [[ $OPTARG = -* ]] ; then
                echo "-s requires server name"
                ((OPTIND--))
                continue
            else
                servers+=("$OPTARG")
            fi
            while [[ ${!OPTIND} && ( ${!OPTIND} != -* ) ]] ; do
                   servers+=("${!OPTIND}")
                   ((OPTIND++))
            done
            srflg=1
            ;;
        h)
	    usage
	    ;;
        -)
	    #example how to use long name trickery with getopts http://mywiki.wooledge.org/ComplexOptionParsing
	    case "$OPTARG" in
		   	vdom)
			    if [[ ${!OPTIND} = -* || ${!OPTIND} = "" ]] ; then
				echo "--vdom requires virtual domain name"
				exit 1
	    		    else
	   			vdom="${!OPTIND}"
				((OPTIND++))
	    		    fi
	    		    while [[ ${!OPTIND} && ( ${!OPTIND} != -* ) ]] ; do
		   		vdom="${!OPTIND}"
		   		((OPTIND++))
	    		    done
            		    vdomflg=1
            		;;
		   	interface)
			    if [[ ${!OPTIND} = -* || ${!OPTIND} = "" ]] ; then
				echo "--interface requires associated-interface name"
				exit 1
	    		    else
	   			interface="${!OPTIND}"
				((OPTIND++))
	    		    fi
	    		    while [[ ${!OPTIND} && ( ${!OPTIND} != -* ) ]] ; do
		   		interface="${!OPTIND}"
		   		((OPTIND++))
	    		    done
            		    intflg=1
            		;;
		   	qagroup)
			    if [[ ${!OPTIND} = -* || ${!OPTIND} = "" ]] ; then
				echo "--qagroup requires name QA Address Group"
				exit 1
	    		    else
	   			qagroup="${!OPTIND}"
				((OPTIND++))
	    		    fi
	    		    while [[ ${!OPTIND} && ( ${!OPTIND} != -* ) ]] ; do
		   		qagroup="${!OPTIND}"
		   		((OPTIND++))
	    		    done
            		    qagrpflg=1
            		;;
			rcenter)
			    if [[ ${!OPTIND} = -* || ${!OPTIND} = "" ]] ; then
				echo "--rcenter requires repliweb center hostname"
				exit 1
	    		    else
	   			rcenter["hostname"]="${!OPTIND}"
				((OPTIND++))
	    		    fi
	    		    while [[ ${!OPTIND} && ( ${!OPTIND} != -* ) ]] ; do
		   		rcenter["hostname"]="${!OPTIND}"
		   		((OPTIND++))
	    		    done
            		    rcenterflg=1
			;;
		    	help)
			usage
			;;
	    esac
            ;;
      '?')
            usage
            ;;
    esac
done
shift "$((OPTIND-1))"

(( ! ${#servers[@]} )) && servers=("1.1.1.1")
if [[ ! ${rcenter["hostname"]} ]] ; then
     echo "required argument: --rcenter "
     exit 1
fi

if rcenter["ip"]=$(getent hosts "${rcenter["hostname"]}"); then 
     rcenter["ip"]="${rcenter["ip"]%% *}"
else
     echo "failed to resolve ${rcenter["hostname"]}"
     exit 1
fi

for var in vdom interface qagroup;do
      if [[ -z ${!var} ]] ; then
	   usage
      fi
done

if [[ ! $user ]] ; then
     read -p "Username: " -e -r user
fi

read -p "Username: " -e -r user
: ${user:=$USER}


for server in "${servers[@]}" ; do
  if [[ $server =~ -[0-9]+$ ]] ; then
      connectserv=("${server%-*}" -p "${server##*-}")
      server="${server%-*}"
  else
      connectserv=("$server")
  fi
  #connect to the server
  printf "\n\n%s\e[4m%s\n\e[0m" "connecting to server " "$server"

  export SSH_AGENT_PID=$SSH_AGENT_PID SSH_AUTH_SOCK=$SSH_AUTH_SOCK
  ssh -T -o ConnectTimeout="$conntimeo" -o stricthostkeychecking=no "$user@${connectserv[@]}" <<-EOF
	config vdom
	edit "$vdom"
	config firewall address
	edit "${rcenter['hostname']}"
	set subnet ${rcenter['ip']}/32
	set associated-interface "$interface"
	end
	config firewall addrgrp
	edit "$qagroup"
	append member "${rcenter['hostname']}"
	end
	quit
	EOF
done
printf "\n"
